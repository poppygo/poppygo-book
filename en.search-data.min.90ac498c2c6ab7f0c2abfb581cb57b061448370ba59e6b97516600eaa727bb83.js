'use strict';(function(){const b={cache:!0};b.doc={id:'id',field:['title','content'],store:['title','href','section']};const a=FlexSearch.create('balance',b);window.bookSearchIndex=a,a.add({id:0,href:'/poppygo-book/docs/poppygo-app/',title:"PoppyGo App",section:"Docs",content:"The PoppyGo App Reference Manual #  Introduction #  This is the PoppyGo App Reference Manual. Intended audiance are PoppyGo developers all over the world.\nAbout the PoppyGo App #  The PoppyGo App is an offline CMS specially made for maintaining Hugo websites. It offers content management and publishing functions.\nVersion #  This reference is up to date for PoppyGo Version 0.9\n"}),a.add({id:1,href:'/poppygo-book/docs/poppygo-app/30-site-configuration/2-content-model-configuration/field-types/',title:"Field Types",section:"Content Model Configuration",content:"Introduction #  Form fields are the building blocks of a PoppyGo\u0026rsquo;s Content Management System.\n"}),a.add({id:2,href:'/poppygo-book/docs/poppygo-app/30-site-configuration/1-workspace-conf/',title:"Site Workspace Configuration",section:"PoppyGo Site configuration",content:"Site workspace configuration #  Every PoppyGo website has it own workspace configuration file. It\u0026rsquo;s located in $HOME/Sukoh/config.websitename.json. The workspace configurations tells PoppyGo where to find the site files and where to publish the website. Normally this configuration needs no manual modification.\n   property value type optional description     key string mandatory Keys are for internal use and must be unique   name string mandatory The name of the website   lastPublish integer mandatory Timespamp with time of last publication   publishStatus integer mandatory 1=published, 2=publication pending remote   source.type string mandatory Depriciated: Should always be folder   source.path string mandatory Path to the Hugo site root directory   publish array of dictionaries mandatory Array with publish configurations, currently only one is supported   publish.0.key string mandatory Keys are for internal use and must be unique   publish.0.config dictionary mandatory Dictionary with publish configuration information   publish.0.config.type string mandatory type publication endpoint. Currently only poppygo-cloud is supported   publish.0.config.defaultDomain string mandatory default live domain    "}),a.add({id:3,href:'/poppygo-book/docs/poppygo-app/30-site-configuration/2-content-model-configuration/',title:"Content Model Configuration",section:"PoppyGo Site configuration",content:"Content Model Confiration #  For content managing PoppyGo App can create advanced forms to edit content. These forms are configured in the sukoh.json file. The sukoh-file can be in YAML, JSON or TOML-formatting. For sake of readability we use YAML for inline example snippets in this reference.\nSukoh file structure. #  The sukoh file is split up in several main properties:\n build: information how to serve the hugo website serve: information how to build the hugo website hugover: the hugo version to use. The correct hugo version is downloaded automatically. collections: main key for collections with pages. E.g. blog posts singles: main key for single page configurations. E.g. home page or about menu: main key for the menu configuration of the CMS. partials: main key for the partial form definitions to be used in dynamic forms.  Here\u0026rsquo;s an example sukoh.yaml file containing a minimal configuration for a blog website.\nbuild: - config: config.toml key: default serve: - config: config.toml key: default hugover: extended_0.76.5 collections: - dataformat: yaml extension: md fields: - key: draft title: Draft type: boolean - key: title title: Title type: string - extensions: - jpg - png - jpeg - pdf - svg fields: - key: thumb title: Thumb type: bundle-image-thumbnail key: page_related_images path: \u0026#39;\u0026#39; title: Page related images type: bundle-manager - key: mainContent title: Main content type: markdown - key: publishdate title: Publishdate type: hidden - key: tags title: Tags type: chips folder: content/post/ itemtitle: Post key: c__post title: Posts menu: - key: singles menuItems: - key: s__about title: Pages - key: collections menuItems: - key: c__post title: Groups - key: general menuItems: - key: config title: General singles: - dataformat: toml fields: - key: description title: Description type: string - key: title title: Title type: string - fields: - key: author title: Author type: string - key: dateFormat title: Date format type: string - key: description title: Description type: string - key: paginationSinglePost title: Pagination single post type: boolean - key: readMore title: Read more type: boolean - key: style title: Style type: string groupdata: true key: params title: Params type: section file: config.toml key: config title: Settings - dataformat: yaml fields: - key: title title: Title type: string - key: description title: Description type: string - extensions: - jpg - png - jpeg - pdf - svg fields: - key: thumb title: Thumb type: bundle-image-thumbnail key: page_related_images path: images/ title: Page related images type: bundle-manager - key: mainContent title: Main content type: markdown file: content/about.md key: s__about previewUrl: /about/ title: About Single Properties #  The Single main key is optional. It can define an array with one or more pages or data files which will get their own navigation item in the PoppyGo Content Menu. In the above example there is a Single page About configured and the config.toml is also configured to be managed with PoppyGo. Below the properties of a single Single dictionary.\n   property value type optional description     key string mandatory Keys are for internal use and must be unique   dataformat string: yaml, toml,json mandatory Defines the type of output format. If file is a markdown file the outputs regards to the frontmatter   title string mandatory The title of this page in the menu and when PoppyGo App refers to this page   file string: relative path to file mandatory The path to the file. This is the data storage. Can be data/somefile.{json,toml,yaml} or content/somefile.md   previewUrl string: relative url path to the website optional When set, this path is used to preview the page   fields array of dictionaries mandatory These are the form input fields.    Collections Properties #  The Collections main key is optional. It can define an array with one or more collections with pages which will get their own navigation item in the PoppyGo Content Menu. In the above example there is a Collection Blog configured containing blog pages in the folder content/blog/. Below the properties of a single collection dictionary.\n   property value type optional description     key string mandatory Keys are for internal use and must be unique   dataformat string: yaml, toml,json mandatory Defines the output format of the frontmatter block. Collections can only handle markdown files. the outputs regards to the frontmatter   extension ??? mandatory ???   title string mandatory The title of this page in the menu and when PoppyGo App refers to this page   file string: relative path to file mandatory The path to the file. This is the data storage. Can be data/somefile.{json,toml,yaml} or content/somefile.md   itemtitle string mandatory The singular name of the collection items   folder string: relative path to dir mandatory The path to the directory containing all files with the configured extension.   fields array of dictionaries mandatory These are the form input fields.    Menu Properties #  The Menu main key is optional. When configured with an array of menu item dictionaries, the PoppyGo content navigation is overriden by this configuration. Without a configured menu, PoppyGo Creates two menu sections: Singles and Collections. Below the properties of a single menu directory.\n   property value type optional description     key string mandatory Keys are for internal use and must be unique   title string mandatory The title of this menu   menuItems array of dictionaries mandatory contains a menu items    Below the properties of a single menu item.\n   property value type optional description     key string mandatory this refers to the key of the defined Single of Collection    Form Input Components #  the main keys Singles, Collections and Partials can have fields definitions. These are the building blocks for creating forms.\n"}),a.add({id:4,href:'/poppygo-book/docs/poppygo-app/10-about/',title:"About",section:"PoppyGo App",content:"About the PoppyGo Book #  This handbook is not an extensive guide on how to use and configure hugo websites The purpose of this document is to explain how to configure, distribute and maintain PoppyGo websites.\nTo search for a particular term within the PoppyGo Book, select the \u0026lsquo;magnifying glass\u0026rsquo; icon, or press \u0026rsquo;s'.\nThose looking for tips and tricks on how to develop Hugo websites should consult the official Hugo Documentation or the Hugo Forum.\nExample Commands #  Examples in this guide may have snippets of commands to be run in your shell or paste in your editor. When you see a snippet beginning with $ it\u0026rsquo;s a shell command. as your normal user. After either of these lines, there may be example output from the command.\nPlaceholders #  Some examples include text with placeholders. Placeholders indicate where you should substitute the appropriate information. For example:\n$ cat ~/Sukoh/config.\u0026lt;site_name\u0026gt;.json This means you need to substitute the text \u0026lt;site_name\u0026gt; with the actual site name.\nContributing #  We welcome contributions to this book. Please read our Contributing Guidelines.\n"}),a.add({id:5,href:'/poppygo-book/docs/poppygo-app/30-site-configuration/2-content-model-configuration/field-types/accordion/',title:"Accordion",section:"Field Types",content:"Accordion #  The accordion field is a container field. It can define multiple input fields, which are displayed as subform.\nProperties #     property value type optional description     key string mandatory Keys are for internal use and must be unique   title string mandatory The title of the accordion element   dynFormSearchKey string optional key of one of the child field of which the value refers to a custom partial form   dynFormObjectFile string with relative path to file without file extension optional if dynFormSearchKey is set this path points to the file containing a subform. Do not define the used file extension. PoppyGo will automatically try to open json, toml or yaml files. If dynFormObjectFile is not set it refers to the partials in the sukoh file itself.   dynFormObjectRoot string optional if dynFormObjectFile is set this points to the root node where the subform is defined e.g. components   fields array of dictionaries mandatory These are the form input fields.   fields.[n].arrayTitle boolean optional The value of the child field which has arrayTitle=true will be displayed as the accordion item title    Regular accordion #  Below an example of a regular accordion configuration without dynamic forms.\n  Accordion   key: my-accordion title: \u0026#34;accordion\u0026#34; type: \u0026#34;accordion\u0026#34; fields: - key: title title: Title type: string arrayTitle: true - key: boolean1 title: boolean1 type: boolean - key: boolean2 title: boolean2 type: boolean - key: boolean3 title: boolean3 type: boolean Accordion with dynamic forms defined in sukoh.yaml #  Fragments of the sukoh.yaml with a dynamic accordion and a partials section\n... key: page_sections title: Page sections type: accordion dynFormSearchKey: component_type fields: - key: title title: Title type: string arrayTitle: true - key: component_type title: Component Type type: select multiple: false options: - text: Component 1 value: component1 - text: Component 2 value: component2 ... ... partials: - key: component1 component_type: poppy-banner fields: - key: poppy_variant title: PoppyGo Variant type: select multiple: false options: - text: Full height value: header-banner-full-height - text: Regular value: header-banner - key: bg_image title: Background image type: string - key: buttontxt title: Button text type: string - key: component2 component_type: poppy-shortlist type: section groupdata: true fields: - key: text1 title: Text 1 type: string - key: text2 title: Text 2 type: string - key: text3 title: Text 3 type: string Accordion with dynamic forms defined in a seperate file #  Fragments of the sukoh.yaml with a dynamic accordion.\n... key: page_sections title: Page sections type: accordion dynFormSearchKey: component_type dynFormObjectFile: data/pageComponentsTree dynFormObjectRoot: components fields: - key: title title: Title type: string arrayTitle: true - key: component_type title: Component Type type: select multiple: false options: - text: Component 1 value: component1 - text: Component 2 value: component2 The complete object file in this case data/pageComponentsTree.yaml\ncomponents: - key: component1 component_type: poppy-banner fields: - key: poppy_variant title: PoppyGo Variant type: select multiple: false options: - text: Full height value: header-banner-full-height - text: Regular value: header-banner - key: bg_image title: Background image type: string - key: buttontxt title: Button text type: string - key: component2 component_type: poppy-shortlist type: section groupdata: true fields: - key: text1 title: Text 1 type: string - key: text2 title: Text 2 type: string - key: text3 title: Text 3 type: string "}),a.add({id:6,href:'/poppygo-book/docs/poppygo-app/30-site-configuration/2-content-model-configuration/field-types/boolean/',title:"Boolean",section:"Field Types",content:"Boolean #  The boolean field generates a switch. The output value is true or false\n  Boolean   Properties #     property value type optional description     key string mandatory Keys are for internal use and must be unique   title string mandatory The title of the element    Sample #  Configuration #  fields: key: sample_field title: Sample field type: boolean Output #  sample_field: true Sample frontmatter output #  "}),a.add({id:7,href:'/poppygo-book/docs/poppygo-app/30-site-configuration/2-content-model-configuration/field-types/chips/',title:"Chips",section:"Field Types",content:"Chips #  The chips field generates a field that helps creating tags of keywords from entered strings instantly. The output value is an array with strings.\n  Chips   Properties #     property value type optional description     key string mandatory Keys are for internal use and must be unique   title string mandatory The title of the element    Sample #  Configuration #  fields: key: sample_field title: Sample field type: chips Output #  sample_field: - tag 1 - tag 2 "}),a.add({id:8,href:'/poppygo-book/docs/poppygo-app/30-site-configuration/2-content-model-configuration/field-types/date/',title:"Date",section:"Field Types",content:"Date #  The date field generates a date field with a date picker. The output value is a date string.\n  Date field     Date picker popup   Properties #     property value type optional description     key string mandatory Keys are for internal use and must be unique   title string mandatory The title of the element    Sample #  Configuration #  fields: key: sample_field title: Sample field type: date Output #  sample_field: \u0026#34;2021-03-21\u0026#34; "}),a.add({id:9,href:'/poppygo-book/docs/poppygo-app/30-site-configuration/2-content-model-configuration/field-types/hidden/',title:"Hidden",section:"Field Types",content:"Hidden #  The hidden field is hidden for the user but outputs a default value.\nProperties #     property value type optional description     key string mandatory Keys are for internal use and must be unique   default string mandatory default output value    Sample #  Configuration #  fields: key: sample_field default: some value type: hidden Output #  sample_field: some value "}),a.add({id:10,href:'/poppygo-book/docs/poppygo-app/30-site-configuration/',title:"PoppyGo Site configuration",section:"PoppyGo App",content:"Site configuration #  A PoppyGo Managed website has two main PoppyGo configuration files:\n a workspace configuration a content model configuration  "})})()